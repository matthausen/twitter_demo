{"ast":null,"code":"import _slicedToArray from \"/Users/matteo/App/twitter_demo/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/matteo/App/twitter_demo/frontend/src/components/Home/summary.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Title from './title';\nconst useStyles = makeStyles({\n  depositContext: {\n    flex: 1\n  }\n});\nexport default function Summary(props) {\n  const classes = useStyles();\n  const tweet = props.tweet;\n\n  const _useState = useState(),\n        _useState2 = _slicedToArray(_useState, 2),\n        response = _useState2[0],\n        setResponse = _useState2[1];\n\n  useEffect(() => {\n    sentimentAnalysis();\n  }, []);\n\n  async function sentimentAnalysis() {\n    await axios.post();\n  }\n\n  const date = new Date();\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"Sentiment Analysis\"), React.createElement(Typography, {\n    component: \"p\",\n    variant: \"h4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, tweet ? tweet : null), React.createElement(Typography, {\n    color: \"textSecondary\",\n    className: classes.depositContext,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, date.toDateString()));\n}","map":{"version":3,"sources":["/Users/matteo/App/twitter_demo/frontend/src/components/Home/summary.jsx"],"names":["React","useState","useEffect","axios","makeStyles","Typography","Title","useStyles","depositContext","flex","Summary","props","classes","tweet","response","setResponse","sentimentAnalysis","post","date","Date","toDateString"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AAEA,MAAMC,SAAS,GAAGH,UAAU,CAAC;AAC3BI,EAAAA,cAAc,EAAE;AACdC,IAAAA,IAAI,EAAE;AADQ;AADW,CAAD,CAA5B;AAMA,eAAe,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AACrC,QAAMC,OAAO,GAAGL,SAAS,EAAzB;AADqC,QAE7BM,KAF6B,GAEnBF,KAFmB,CAE7BE,KAF6B;;AAAA,oBAGNZ,QAAQ,EAHF;AAAA;AAAA,QAG/Ba,QAH+B;AAAA,QAGrBC,WAHqB;;AAKrCb,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,iBAAiB;AAClB,GAFQ,EAEN,EAFM,CAAT;;AAIA,iBAAeA,iBAAf,GAAmC;AACjC,UAAMb,KAAK,CAACc,IAAN,EAAN;AACD;;AAED,QAAMC,IAAI,GAAG,IAAIC,IAAJ,EAAb;AAEA,SACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,EAEE,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAC,GAAtB;AAA0B,IAAA,OAAO,EAAC,IAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIN,KAAD,GAAUA,KAAV,GAAkB,IADrB,CAFF,EAKE,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAC,eAAlB;AAAkC,IAAA,SAAS,EAAED,OAAO,CAACJ,cAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGU,IAAI,CAACE,YAAL,EADH,CALF,CADF;AAWD","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Title from './title';\n\nconst useStyles = makeStyles({\n  depositContext: {\n    flex: 1,\n  },\n});\n\nexport default function Summary(props) {\n  const classes = useStyles();\n  const { tweet } = props;\n  const[response, setResponse] = useState()\n\n  useEffect(() => {\n    sentimentAnalysis();\n  }, [])\n\n  async function sentimentAnalysis() {\n    await axios.post()\n  }\n\n  const date = new Date();\n\n  return (\n    <React.Fragment>\n      <Title>Sentiment Analysis</Title>\n      <Typography component=\"p\" variant=\"h4\">\n        {(tweet) ? tweet : null}\n      </Typography>\n      <Typography color=\"textSecondary\" className={classes.depositContext}>\n        {date.toDateString()}\n      </Typography>\n    </React.Fragment>\n  );\n}"]},"metadata":{},"sourceType":"module"}