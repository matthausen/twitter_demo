{"version":3,"sources":["components/Home/listItems.jsx","components/Home/title.jsx","components/Home/chart.jsx","components/Home/deposits.jsx","components/Home/orders.jsx","components/Home/index.jsx","App.js","serviceWorker.js","index.js"],"names":["mainListItems","ListItem","button","ListItemIcon","ListItemText","primary","secondaryListItems","ListSubheader","inset","Title","props","Typography","component","variant","color","gutterBottom","children","createData","time","amount","undefined","useStyles","makeStyles","depositContext","flex","Deposits","classes","Fragment","className","Link","href","id","date","name","shipTo","paymentMethod","rows","theme","seeMore","marginTop","spacing","Orders","Table","size","TableHead","TableRow","TableCell","align","TableBody","map","row","key","root","display","menuButton","marginRight","margin","menuButtonHidden","title","flexGrow","drawerPaper","position","whiteSpace","width","transition","transitions","create","easing","sharp","duration","enteringScreen","drawerPaperClose","overflowX","leavingScreen","breakpoints","up","appBarSpacer","mixins","toolbar","content","height","overflow","container","paddingTop","paddingBottom","paper","padding","flexDirection","fixedHeight","Dashboard","useState","open","setOpen","response","setResponse","tweet","values","setValues","apiEndpoint","data","config","header","a","axios","post","res","console","log","fixedHeightPaper","clsx","CssBaseline","AppBar","appBar","appBarShift","Toolbar","IconButton","edge","aria-label","onClick","noWrap","Badge","badgeContent","Drawer","toolbarIcon","Divider","List","Container","maxWidth","Grid","item","xs","md","lg","Paper","noValidate","autoComplete","TextField","label","textField","value","onChange","event","target","sendTweet","Button","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f3bb6d4b.chunk.js","sourcesContent":["import React from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\nimport PeopleIcon from '@material-ui/icons/People';\nimport BarChartIcon from '@material-ui/icons/BarChart';\nimport LayersIcon from '@material-ui/icons/Layers';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\n\nexport const mainListItems = (\n  <div>\n    <ListItem button>\n      <ListItemIcon>\n        <DashboardIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Dashboard\" />\n    </ListItem>\n    <ListItem button>\n      <ListItemIcon>\n        <ShoppingCartIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Orders\" />\n    </ListItem>\n    <ListItem button>\n      <ListItemIcon>\n        <PeopleIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Customers\" />\n    </ListItem>\n    <ListItem button>\n      <ListItemIcon>\n        <BarChartIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Reports\" />\n    </ListItem>\n    <ListItem button>\n      <ListItemIcon>\n        <LayersIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Integrations\" />\n    </ListItem>\n  </div>\n);\n\nexport const secondaryListItems = (\n  <div>\n    <ListSubheader inset>Saved reports</ListSubheader>\n    <ListItem button>\n      <ListItemIcon>\n        <AssignmentIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Current month\" />\n    </ListItem>\n    <ListItem button>\n      <ListItemIcon>\n        <AssignmentIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Last quarter\" />\n    </ListItem>\n    <ListItem button>\n      <ListItemIcon>\n        <AssignmentIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Year-end sale\" />\n    </ListItem>\n  </div>\n);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\n\nexport default function Title(props) {\n  return (\n    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n      {props.children}\n    </Typography>\n  );\n}\n\nTitle.propTypes = {\n  children: PropTypes.node,\n};","import React from 'react';\nimport { LineChart, Line, XAxis, YAxis, Label, ResponsiveContainer } from 'recharts';\nimport Title from './title';\n\n// Generate Sales Data\nfunction createData(time, amount) {\n  return { time, amount };\n}\n\nconst data = [\n  createData('00:00', 0),\n  createData('03:00', 300),\n  createData('06:00', 600),\n  createData('09:00', 800),\n  createData('12:00', 1500),\n  createData('15:00', 2000),\n  createData('18:00', 2400),\n  createData('21:00', 2400),\n  createData('24:00', undefined),\n];\n\nexport default function Chart() {\n  return (\n    <React.Fragment>\n      <Title>Today</Title>\n      <ResponsiveContainer>\n        <LineChart\n          data={data}\n          margin={{\n            top: 16,\n            right: 16,\n            bottom: 0,\n            left: 24,\n          }}\n        >\n          <XAxis dataKey=\"time\" />\n          <YAxis>\n            <Label angle={270} position=\"left\" style={{ textAnchor: 'middle' }}>\n              Sales ($)\n            </Label>\n          </YAxis>\n          <Line type=\"monotone\" dataKey=\"amount\" stroke=\"#556CD6\" dot={false} />\n        </LineChart>\n      </ResponsiveContainer>\n    </React.Fragment>\n  );\n}","import React from 'react';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Title from './title';\n\nconst useStyles = makeStyles({\n  depositContext: {\n    flex: 1,\n  },\n});\n\nexport default function Deposits() {\n  const classes = useStyles();\n  return (\n    <React.Fragment>\n      <Title>Recent Deposits</Title>\n      <Typography component=\"p\" variant=\"h4\">\n        $3,024.00\n      </Typography>\n      <Typography color=\"textSecondary\" className={classes.depositContext}>\n        on 15 March, 2019\n      </Typography>\n      <div>\n        <Link color=\"primary\" href=\"javascript:;\">\n          View balance\n        </Link>\n      </div>\n    </React.Fragment>\n  );\n}","import React from 'react';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Title from './title';\n\n// Generate Order Data\nfunction createData(id, date, name, shipTo, paymentMethod, amount) {\n  return { id, date, name, shipTo, paymentMethod, amount };\n}\n\nconst rows = [\n  createData(0, '16 Mar, 2019', 'Elvis Presley', 'Tupelo, MS', 'VISA ⠀•••• 3719', 312.44),\n  createData(1, '16 Mar, 2019', 'Paul McCartney', 'London, UK', 'VISA ⠀•••• 2574', 866.99),\n  createData(2, '16 Mar, 2019', 'Tom Scholz', 'Boston, MA', 'MC ⠀•••• 1253', 100.81),\n  createData(3, '16 Mar, 2019', 'Michael Jackson', 'Gary, IN', 'AMEX ⠀•••• 2000', 654.39),\n  createData(4, '15 Mar, 2019', 'Bruce Springsteen', 'Long Branch, NJ', 'VISA ⠀•••• 5919', 212.79),\n];\n\nconst useStyles = makeStyles(theme => ({\n  seeMore: {\n    marginTop: theme.spacing(3),\n  },\n}));\n\nexport default function Orders() {\n  const classes = useStyles();\n  return (\n    <React.Fragment>\n      <Title>Recent Orders</Title>\n      <Table size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Date</TableCell>\n            <TableCell>Name</TableCell>\n            <TableCell>Ship To</TableCell>\n            <TableCell>Payment Method</TableCell>\n            <TableCell align=\"right\">Sale Amount</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map(row => (\n            <TableRow key={row.id}>\n              <TableCell>{row.date}</TableCell>\n              <TableCell>{row.name}</TableCell>\n              <TableCell>{row.shipTo}</TableCell>\n              <TableCell>{row.paymentMethod}</TableCell>\n              <TableCell align=\"right\">{row.amount}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n      <div className={classes.seeMore}>\n        <Link color=\"primary\" href=\"javascript:;\">\n          See more orders\n        </Link>\n      </div>\n    </React.Fragment>\n  );\n}","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport Button from '@material-ui/core/Button';\nimport Badge from '@material-ui/core/Badge';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport { mainListItems, secondaryListItems } from './listItems';\nimport Chart from './chart';\nimport Deposits from './deposits';\nimport Orders from './orders';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n}));\n\nexport default function Dashboard() {\n  const classes = useStyles();\n  const [open, setOpen] = useState(true);\n  const [response, setResponse] = useState();\n  const [values, setValues] = useState({\n    tweet: ''\n  });\n\n  const apiEndpoint = 'http://127.0.0.1:5000/';\n\n  const data = {\n    tweet: values.tweet\n  };\n\n  const config = {\n    header: {\n      'Content-Type': 'application/json'\n    }\n  }\n\n  async function sendTweet() {\n    const res = await axios.post(apiEndpoint, data, config);\n    setResponse(res.data);\n  }\n\n  console.log('Response: ', response);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  const handleChange = name => event => {\n    setValues({ ...values, [name]: event.target.value });\n    sendTweet();\n  };\n\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\n        <Toolbar className={classes.toolbar}>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n            Bench Twitter\n          </Typography>\n          <IconButton color=\"inherit\">\n            <Badge badgeContent={4} color=\"secondary\">\n              <NotificationsIcon />\n            </Badge>\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        variant=\"permanent\"\n        classes={{\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\n        }}\n        open={open}\n      >\n        <div className={classes.toolbarIcon}>\n          <IconButton onClick={handleDrawerClose}>\n            <ChevronLeftIcon />\n          </IconButton>\n        </div>\n        <Divider />\n        <List>{mainListItems}</List>\n        <Divider />\n        <List>{secondaryListItems}</List>\n      </Drawer>\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Container maxWidth=\"lg\" className={classes.container}>\n          <Grid container spacing={3}>\n            {/* Chart */}\n            <Grid item xs={12} md={8} lg={9}>\n              <Paper className={fixedHeightPaper}>\n                {/* <Chart /> */}\n                <form className={classes.container} noValidate autoComplete=\"off\">\n                  <TextField\n                    id=\"standard-tweet\"\n                    label=\"# Tweet\"\n                    className={classes.textField}\n                    value={values.tweet}\n                    onChange={handleChange('tweet')}\n                    margin=\"normal\"\n                  />\n                </form>\n                <Button variant=\"contained\" color=\"primary\" className={classes.button}>\n                  Primary\n                </Button>\n              </Paper>\n            </Grid>\n            {/* Recent Deposits */}\n            <Grid item xs={12} md={4} lg={3}>\n              <Paper className={fixedHeightPaper}>\n                <Deposits />\n              </Paper>\n            </Grid>\n            {/* Recent Orders */}\n            <Grid item xs={12}>\n              <Paper className={classes.paper}>\n                <Orders />\n              </Paper>\n            </Grid>\n          </Grid>\n        </Container>\n      </main>\n    </div>\n  );\n}","import React from 'react';\nimport './App.css';\nimport Dashboard from './components/Home';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Dashboard/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}